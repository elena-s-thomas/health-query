name: Deploy to Google Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:  # Allow manual trigger from GitHub Actions UI

env:
  GCP_REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev
  BACKEND_SERVICE: healthcare-data-backend
  FRONTEND_SERVICE: healthcare-data-frontend

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Google Cloud Auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.REGISTRY }}

    - name: Build and Push Backend
      run: |
        docker build -f Dockerfile.backend \
          -t ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/healthcare-data/backend:${{ github.sha }} \
          -t ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/healthcare-data/backend:latest .

        docker push ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/healthcare-data/backend:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/healthcare-data/backend:latest

    - name: Build and Push Frontend
      run: |
        docker build -f Dockerfile.frontend \
          -t ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/healthcare-data/frontend:${{ github.sha }} \
          -t ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/healthcare-data/frontend:latest .

        docker push ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/healthcare-data/frontend:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/healthcare-data/frontend:latest

    - name: Deploy Backend to Cloud Run
      run: |
        gcloud run deploy ${{ env.BACKEND_SERVICE }} \
          --image ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/healthcare-data/backend:${{ github.sha }} \
          --platform managed \
          --region ${{ env.GCP_REGION }} \
          --allow-unauthenticated \
          --set-env-vars "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},BIGQUERY_DATASET=${{ secrets.BIGQUERY_DATASET }},VERTEX_MODEL=${{ secrets.VERTEX_MODEL }},REGION=${{ env.GCP_REGION }},GOOGLE_APPLICATION_CREDENTIALS_JSON=${{ secrets.GCP_SA_KEY }}" \
          --memory 2Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --port 8000

    - name: Get Backend URL
      id: backend-url
      run: |
        BACKEND_URL=$(gcloud run services describe ${{ env.BACKEND_SERVICE }} \
          --platform managed \
          --region ${{ env.GCP_REGION }} \
          --format 'value(status.url)')
        echo "url=$BACKEND_URL" >> $GITHUB_OUTPUT
        echo "Backend URL: $BACKEND_URL"

    - name: Deploy Frontend to Cloud Run
      run: |
        BACKEND_URL="${{ steps.backend-url.outputs.url }}"
        gcloud run deploy ${{ env.FRONTEND_SERVICE }} \
          --image ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/healthcare-data/frontend:${{ github.sha }} \
          --platform managed \
          --region ${{ env.GCP_REGION }} \
          --allow-unauthenticated \
          --set-env-vars "BACKEND_URL=$BACKEND_URL" \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 5 \
          --port 8501

    - name: Get Frontend URL
      run: |
        FRONTEND_URL=$(gcloud run services describe ${{ env.FRONTEND_SERVICE }} \
          --platform managed \
          --region ${{ env.GCP_REGION }} \
          --format 'value(status.url)')
        echo "Frontend deployed at: $FRONTEND_URL"
        echo "## Deployment Successful! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
        echo "Frontend: $FRONTEND_URL" >> $GITHUB_STEP_SUMMARY
        echo "Backend: ${{ steps.backend-url.outputs.url }}" >> $GITHUB_STEP_SUMMARY